/*******************************************************************************
********************************************************************************
*@ File:	ATSHA_Commands_Module.c
****************************************
*@ Company:	Sadr Electronic Dena Co.

*@ Version:	1.0
*@ Update:	Last:96/03/01	Previous:96/03/01	Created:96/03/01
*@ Author:	M. Aghamohamadian.

*@ Brief:	The functions corresponding to the module of this header assign
                particular commands of ATSHA to the input buffer of the chip.

*@ Note:        The convention (slot number,first word,last word) applies to reading
                and writing data from a certain zone. Hence, WCZ055 means writing
                to slot zero, from word 5 to word 5 of configuration zone.
********************************************************************************
*******************************************************************************/
/*----- Include Files --------------------------------------------------------*/
#ifndef ATSHA_COMMANDS_MODULE_h
#define ATSHA_COMMANDS_MODULE_h


/*----- CONSTANT DEFINITIONS -------------------------------------------------*/
//// Commands corresponding to each state
// Null command
#define           NO_COMMAND                       0x00         // Let's just say that this is the null command, does zilch, nien, nothing, empty, sadness, lonliness!
#define           COMMAND_FAILURE                  0xFF         // The command execution has failed due to time-out in PL2 command name!

// Nonce command used in GENERATE NONCE+1 state
#define           GN1_NONCE_COMMAND                0x01         // The name of this command (chosen arbitrarily)
#define           GN1_NONCE_COUNT                  0x1B         // The length of this command (excluding word_address)        
#define           GN1_NONCE_OPCODE                 0x16                 
#define           GN1_NONCE_PARAM1                 0x00                 
#define           GN1_NONCE_PARAM20                0x00                                  
#define           GN1_NONCE_PARAM21                0x00    
#define           GN1_NONCE_DATA1_LENGTH           20           // The length of Data1 vector for this command    
#define           GN1_NONCE_DATA2_LENGTH           0            // The length of Data2 vector for this command
#define           GN1_NONCE_DATA3_LENGTH           0            // The length of Data3 vector for this command
#define           GN1_NONCE_RESPONSE_LENGTH        0x23     

// DeriveKey command used in GENERATE CHILD KEY state
#define           GCK_DERIVEKEY_COMMAND            0x02         
#define           GCK_DERIVEKEY_COUNT              0x06         
#define           GCK_DERIVEKEY_OPCODE             0x1C                 
#define           GCK_DERIVEKEY_PARAM1             0x00                 
#define           GCK_DERIVEKEY_PARAM20            0x00                                  
#define           GCK_DERIVEKEY_PARAM21            0x02             
#define           GCK_DERIVEKEY_DATA1_LENGTH       0  
#define           GCK_DERIVEKEY_DATA2_LENGTH       0  
#define           GCK_DERIVEKEY_DATA3_LENGTH       0  
#define           GCK_DERIVEKEY_RESPONSE_LENGTH    0x04     


//// TempKey parameter definition
// Source flag  
#define           TEMPKEY_RAND_SOURCE              0                    // The content of TempKey is generated from nonce ro random command.
#define           TEMPKEY_INPUT_SOURCE             1                    // The content of TempKey is given by input.

// GenData
#define           TEMPKEY_GENDATA_IGNORE           0                    // The content of TempKey.SlotID is ignored.

// CheckFlag
#define           TEMPKEY_CHECKFLAG_NOGENDIG       0                    // The content of TempKey were not generated using GenDig command.

// Valid
#define           TEMPKEY_INVALID                  0                    // The content of TempKey is invalid.
#define           TEMPKEY_VALID                    1                    // The content of TempKey is valid.

//// Other parameters
#define           COMMAND_WORD_ADDRESS             0x03                 // This is the typical word address for sending a command.
#define           RESPONSE_COUNT_OFFSET            1                    // The location where data begins in response vector of ATSHA when response is at least five bytes.
#define           ATSHA_NONCE_LENGTH               32                   // The length of nonce generated by ATSHA.


/*------ Global Variable Definition ------------------------------------------*/
struct sha204h_temp_key {                      // Structure for TempKey (Note:  The dot operator defines a bit-field here).
	unsigned char value[32];               // The content of SRAM (TempKey.TempKey).      
	unsigned int key_id :4;                // If TempKey was generated by GenDig (see the GenData and CheckFlag bits), these bits indicate which key was used in its computation.   
	unsigned int source_flag :1;           // The source of randomness in TempKey: 0=Rand, 1=Input.
	unsigned int gen_data :1;              // Indicates if TempKey has been generated by GenDig using Data zone.
	unsigned int check_flag :1;            // The check_flag field.
	unsigned int valid :1;                 // Indicates if the information in TempKey is valid.
};

/*------ Function Definition -------------------------------------------------*/
void Assign_CommandData(unsigned char *pdata1, unsigned char data1_length, unsigned char *pdata2, unsigned char data2_length, unsigned char *pdata3, unsigned char data3_length, command_response_struct *pcommand_response);
/* 
Input:
    *pdata1: Denotes the pointer to the data1 vector of all commands.
     data1_length: Denotes the length of data1 vector of all commands.
    *pdata2: Denotes the pointer to the data2 vector of all commands.
     data2_length: Denotes the length of data2 vector of all commands.
    *pdata3: Denotes the pointer to the data3 vector of all commands.
     data3_length: Denotes the length of data3 vector of all commands.      
    *pcommand_response: A pointer to command response structure.

Output:
    No output.

Description:
    This function assigns the mode, count byte and parameter one and two of each command sent to ATSHA.
*/


void Assign_CommandParams(unsigned char command_name, unsigned char word_address, unsigned char count, unsigned char opcode, unsigned char param1, unsigned char param20, unsigned char param21, command_response_struct *pcommand_params);
/*
Input:
    command_name: The named assigned to this write command.
    word_address: The word address suitable for this command.
    count: The count byte of the write command.
    opcode: The opcode byte of the write command.
    param1: Parameter one of the write command.
    param20: Parameter 21 of the write command.
    param21: Parameter 22 of the write command.
    *pcommand_response: A pointer to command response structure.

Output:
    No output.

Description:
    This function assigns the mode, count byte and parameter one and two of each command to the command buffer.
    Note: Parameters should always be assigned first, i.e., before data of the command!
*/


void Assign_Response_Params(command_response_struct *pcommand_response, unsigned char length, unsigned setSHA_sleep_idle);
/* 
Input:
    *pcommand_response: A pointer to command response structure.
    length: The length of the response that should be received to this command.
    setSHA_sleep_idle: Denotes whether ATSHA should be put to sleep or to be sent to idle mode.

Output:
    No output

Description:
    This function determines some of data that should be received in response to a previously sent command to ATSHA.
*/


void Assign_TempKey(unsigned char SlotID, unsigned char source_flag, unsigned char gen_data, unsigned char check_flag, unsigned char valid, sha204h_temp_key *pTempKey);
/*
Input:
   Input parameters are the data of TempKey.
Output:
   No output.

Description:
   This function assigns the parameters of TempKey register.
*/


void Generate_Nonce(command_response_struct *pcommand_response, unsigned int current_system_time)
/* 
Input:
   current_system_time: The current system time.
   *pcommand_response: A pointer to command response structure.

Output:
   No output.

Description:
   This function generates a nonce for each authentication session.
*/

#endif